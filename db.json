{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1488271191729},{"_id":"themes/maupassant/LICENSE","hash":"b7ea1dbb2fed3410d78bc7c125e1d80927b56981","modified":1488271191732},{"_id":"themes/maupassant/_config.yml","hash":"235174079478ab44aa44708786e98c2f4644543d","modified":1488271397015},{"_id":"themes/maupassant/README.md","hash":"1e0e701e5ea813f7951f3fe3dac2de5ccf0ba0db","modified":1488271191748},{"_id":"themes/maupassant/package.json","hash":"04ca87ea475f37841d3610fe5806feb8022416c3","modified":1488271192094},{"_id":"source/_posts/karma-config-note-2.md","hash":"6503c57ad84a7194f5f5d969f13f97fdd1046165","modified":1488272098308},{"_id":"source/_posts/karma-config-note.md","hash":"104fa06c500e520a6cf8ebe4e19913db928748f4","modified":1488272098346},{"_id":"source/about/index.md","hash":"33b6187650c0871595f60287b7fd78fabc7964fd","modified":1488272075845},{"_id":"source/categories/index.md","hash":"679f94538641e56360ef36427f8e507191b3d1e7","modified":1487238128041},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488271191637},{"_id":"themes/maupassant/.git/config","hash":"fb9cab07ffe3866880dd7f679478429b9de1d5c3","modified":1488271191655},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488271181690},{"_id":"themes/maupassant/.git/index","hash":"1f9636626cdd1a4a31da059b12292ee4be814ab8","modified":1488271192389},{"_id":"themes/maupassant/.git/packed-refs","hash":"8aeed9c81ffee31daed3cdfe21471182f83e56e9","modified":1488271191593},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1488271191754},{"_id":"themes/maupassant/languages/en.yml","hash":"6c5fc2cec7e44306d97bc7902e9765389d21c363","modified":1488271191756},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1488271191759},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1488271191762},{"_id":"themes/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1488271191765},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"41f7c09365cbd5ba1b8906191ee07bc75094185a","modified":1488271191780},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"46659764e31c7866af436d98d4fabb9da122037a","modified":1488271191783},{"_id":"themes/maupassant/layout/archive.jade","hash":"d70d1ed241b1a431a2434768d02bb2de03070f70","modified":1488271191972},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"deaa33ada3a58fae9f86ef72d934f0fdf846abb9","modified":1488271191975},{"_id":"themes/maupassant/layout/base.jade","hash":"1a5f473b3b49f0feb6758e9dcb61342446283cc7","modified":1488271192065},{"_id":"themes/maupassant/layout/index.jade","hash":"24447c56462eb86a7a0b08f8d24c3c42451b4c02","modified":1488271192076},{"_id":"themes/maupassant/layout/page.jade","hash":"1e98aa785073dc1bbfe70f2863bc19fe287483b9","modified":1488271192080},{"_id":"themes/maupassant/layout/post.jade","hash":"f68f483242409f501bbc8b50ff129edd981087e2","modified":1488271192084},{"_id":"themes/maupassant/layout/single-column.jade","hash":"4be14ac93c154216e174fe0c4c05608c26f59c42","modified":1488271192087},{"_id":"themes/maupassant/layout/timeline.jade","hash":"ee1e8e4e8fdf61c6d19f1f7fe31ab50ab1465a8d","modified":1488271192090},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1488271181739},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488271181801},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488271181807},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1488271181853},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1488271181882},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1488271181888},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488271181951},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488271181961},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1488271181967},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1488271181971},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"0f1922b673921534206c57afa0dcd34e27bcbdd3","modified":1488271191647},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"7e69266c3d1b9d872617046ca0630998200072fd","modified":1488271191790},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"b3a0b0ce0642f2bfe9df94b075c0c2a083871e1b","modified":1488271191795},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"87e096caac8e780c0894ef1844f59246f861bbe7","modified":1488271191798},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1488271191814},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1488271191817},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1488271191819},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1488271191821},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1488271191824},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1488271191826},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1488271191829},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1488271191832},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"2a1dd6a0e2befd073e3347347994d8dcd2047879","modified":1488271191834},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"0b9e78e7f20bc69690e05f2e0c956bded9058a84","modified":1488271191837},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1488271191950},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"c5301ca7f2ec24d790fd7f35f69f8fd8acbdb725","modified":1488271191967},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1488271191969},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"0d142e11e27e9de1a325c32369c42254101ddd34","modified":1488271192099},{"_id":"themes/maupassant/source/css/style.scss","hash":"17ec17e219f9eceb1a1ef7836fd63dcc1a47b5a0","modified":1488272258037},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488271192104},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488271192105},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488271192106},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488271192156},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488271192157},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488271192159},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1488271192178},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1488271192185},{"_id":"themes/maupassant/source/js/search.js","hash":"dbda07a03e6edc73f1dc28a068c24a6037b97b56","modified":1488271192193},{"_id":"themes/maupassant/source/js/share.js","hash":"bb6880e2e8e187b576daf326476f09b0907fbe14","modified":1488271192202},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1488271192280},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1488271192284},{"_id":"themes/maupassant/.git/objects/pack/pack-3a8a25b0b8206682007a1a2bf060e3ea8fa41fe0.idx","hash":"cae1b2f4aec5181f304bd88a53f8131dbb9090b6","modified":1488271191232},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"77e07bd7afcad178079617a76eac285e03d4a873","modified":1488271191644},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"0f1922b673921534206c57afa0dcd34e27bcbdd3","modified":1488271191646},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488271191607},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"0f1922b673921534206c57afa0dcd34e27bcbdd3","modified":1488271191636},{"_id":"themes/maupassant/.git/objects/pack/pack-3a8a25b0b8206682007a1a2bf060e3ea8fa41fe0.pack","hash":"9224b576c7d3fd5e5ed26f1e0d3b24b4050503c5","modified":1488271191306},{"_id":"public/atom.xml","hash":"a10ced30ed9b74b9da8d1092b6eec7599c8b3810","modified":1488272873167},{"_id":"public/content.json","hash":"af6b0b9fb40e4660005eb8be3187243aff90cc0b","modified":1488272873169},{"_id":"public/search.xml","hash":"94449c9a28988263c2dcf947a902371ac408be82","modified":1488272873169},{"_id":"public/about/index.html","hash":"add5326207f4ebd87fd91c87f90f7fb3cf129657","modified":1488272873175},{"_id":"public/categories/index.html","hash":"ce666c7e7882a6058c3eca9247eed705d80abe48","modified":1488272873175},{"_id":"public/2017/02/22/karma-config-note-2/index.html","hash":"c691c47127ef374223830fe3a304514b305a7d1b","modified":1488272873176},{"_id":"public/2017/02/17/karma-config-note/index.html","hash":"7cbff7be13aedba48549e642573bc7baacffc8c4","modified":1488272873176},{"_id":"public/archives/index.html","hash":"613c4ed8c73a53b591b08332cdfd641359650f6c","modified":1488272873176},{"_id":"public/archives/2017/index.html","hash":"613c4ed8c73a53b591b08332cdfd641359650f6c","modified":1488272873176},{"_id":"public/archives/2017/02/index.html","hash":"613c4ed8c73a53b591b08332cdfd641359650f6c","modified":1488272873176},{"_id":"public/categories/测试/index.html","hash":"b8bbf6eb6f87be5273db001d5adef8f6ea399711","modified":1488272873176},{"_id":"public/index.html","hash":"0a7146d3d09c28e5ae2601971391015cdc2de56b","modified":1488272873176},{"_id":"public/tags/karma/index.html","hash":"67f213150f6cf6a2b7e4a1bce998bb9a77c0a4a0","modified":1488272873176},{"_id":"public/tags/测试框架/index.html","hash":"ae14631e43cd8a8120035c9d7f69030d43fceb22","modified":1488272873179},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488272873179},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488272873179},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488272873179},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488272873179},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488272873179},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488272873179},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1488272873229},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1488272873229},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1488272873232},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1488272873232},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1488272873232},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1488272873232},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1488272873232},{"_id":"public/css/style.css","hash":"8a6fa3aa36d43fce827f850256c7e1263c0bfabb","modified":1488272873232}],"Category":[{"name":"测试","_id":"cizpb8phg0003wsu2g8w1ef4n"}],"Data":[],"Page":[{"title":"关于  我","date":"2017-02-28T16:52:44.000Z","_content":"\n曾经我以为`php`是世界上最好的语言  \n现在  \n我觉得  \n`JS`也是  \n开玩笑！摔！\n\n现就职于深圳谛听科技  \n捣鼓各种前端工具  \n负责`newifi`和`pandorabox`路由器前端开发\n","source":"about/index.md","raw":"---\ntitle: 关于  我\ndate: 2017-02-28 16:52:44\n---\n\n曾经我以为`php`是世界上最好的语言  \n现在  \n我觉得  \n`JS`也是  \n开玩笑！摔！\n\n现就职于深圳谛听科技  \n捣鼓各种前端工具  \n负责`newifi`和`pandorabox`路由器前端开发\n","updated":"2017-02-28T08:54:35.845Z","path":"about/index.html","comments":1,"layout":"page","_id":"cizpb8phd0001wsu2oyrvqhbr","content":"<p>曾经我以为<code>php</code>是世界上最好的语言<br>现在<br>我觉得<br><code>JS</code>也是<br>开玩笑！摔！</p>\n<p>现就职于深圳谛听科技<br>捣鼓各种前端工具<br>负责<code>newifi</code>和<code>pandorabox</code>路由器前端开发</p>\n","excerpt":"","more":"<p>曾经我以为<code>php</code>是世界上最好的语言<br>现在<br>我觉得<br><code>JS</code>也是<br>开玩笑！摔！</p>\n<p>现就职于深圳谛听科技<br>捣鼓各种前端工具<br>负责<code>newifi</code>和<code>pandorabox</code>路由器前端开发</p>\n"},{"title":"categories","date":"2017-02-16T17:42:08.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-02-16 17:42:08\n---\n","updated":"2017-02-16T09:42:08.041Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cizpb8q1i000fwsu25l2nr10h","content":"","excerpt":"","more":""}],"Post":[{"title":"karma配置参数笔记(2)","date":"2017-02-21T16:39:11.000Z","description":"本文是关于karam配置参数笔记.涉及如下参数:files preprocessors reporters","_content":"\n\n```\nmodule.exports = function(config) {\n    var files = [];\n    files.push('newifi/@(jquery*|newifi).js');\n    files.push('index.html');\n    files.push('../../test/*.coffee');\n    files.push('../../test/*.js');\n    var otherFiles = [\n        'newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).js',\n        'newifi/**/*.css',\n        'newifi/**/*.json'\n    ];\n    otherFiles.forEach((file) => {\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    var preprocessors = {\n        '**/*.html': ['html2js'],\n        '../../**/*.coffee': ['coffee']\n    };\n    preprocessors[otherFiles[0]] = ['coverage'];\n    config.set({\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: 'web/htdocs/',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['jasmine-jquery', 'jasmine', 'jasmine-matchers'],\n\n\n        // list of files / patterns to load in the browser\n        files: files,\n\n        // list of files to exclude\n        exclude: [],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: preprocessors,\n        proxies: {\n            '/newifi': '/base/newifi'\n        },\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress', 'kjhtml', 'coverage'],\n\n        coverageReporter: {\n            type: 'html',\n            dir: '../../coverage/'\n        },\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: false,\n\n        // Concurrency level\n        // how many browser should be started simultaneous\n        concurrency: Infinity\n    });\n};\n```\n\n这是改进后的配置文件。  \n上一篇里面用`glob`获取所有匹配文件，然后一个个加文件的做法其实是多余的。\n经过试验，其实`karma`的文件匹配方式是支持`glob`那套的。\n<!--more-->\n\n然后，新配置内添加`kjhtml`插件和`coverage`插件。  \n`kjhtml`插件的作用是将`karma`服务器的debug页变成测试结果页。而且，在debug页点击其中一个测试结果，该测试都会重新执行一遍。不过，可惜的是，修改测试文件后不会自动刷新。  \n`coverage`插件是覆盖测试报告。  \n上面配置文件里面的这句:  \n```\npreprocessors[otherFiles[0]] = ['coverage'];\n```\n表示那些被测试的文件需要代码覆盖测试报告。\n","source":"_posts/karma-config-note-2.md","raw":"---\ntitle: karma配置参数笔记(2)\ndate: 2017-02-21 16:39:11\ncategories:\n- 测试\ntags:\n- karma\n- 测试框架\ndescription: 本文是关于karam配置参数笔记.涉及如下参数:files preprocessors reporters\n---\n\n\n```\nmodule.exports = function(config) {\n    var files = [];\n    files.push('newifi/@(jquery*|newifi).js');\n    files.push('index.html');\n    files.push('../../test/*.coffee');\n    files.push('../../test/*.js');\n    var otherFiles = [\n        'newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).js',\n        'newifi/**/*.css',\n        'newifi/**/*.json'\n    ];\n    otherFiles.forEach((file) => {\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    var preprocessors = {\n        '**/*.html': ['html2js'],\n        '../../**/*.coffee': ['coffee']\n    };\n    preprocessors[otherFiles[0]] = ['coverage'];\n    config.set({\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: 'web/htdocs/',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['jasmine-jquery', 'jasmine', 'jasmine-matchers'],\n\n\n        // list of files / patterns to load in the browser\n        files: files,\n\n        // list of files to exclude\n        exclude: [],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: preprocessors,\n        proxies: {\n            '/newifi': '/base/newifi'\n        },\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress', 'kjhtml', 'coverage'],\n\n        coverageReporter: {\n            type: 'html',\n            dir: '../../coverage/'\n        },\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: false,\n\n        // Concurrency level\n        // how many browser should be started simultaneous\n        concurrency: Infinity\n    });\n};\n```\n\n这是改进后的配置文件。  \n上一篇里面用`glob`获取所有匹配文件，然后一个个加文件的做法其实是多余的。\n经过试验，其实`karma`的文件匹配方式是支持`glob`那套的。\n<!--more-->\n\n然后，新配置内添加`kjhtml`插件和`coverage`插件。  \n`kjhtml`插件的作用是将`karma`服务器的debug页变成测试结果页。而且，在debug页点击其中一个测试结果，该测试都会重新执行一遍。不过，可惜的是，修改测试文件后不会自动刷新。  \n`coverage`插件是覆盖测试报告。  \n上面配置文件里面的这句:  \n```\npreprocessors[otherFiles[0]] = ['coverage'];\n```\n表示那些被测试的文件需要代码覆盖测试报告。\n","slug":"karma-config-note-2","published":1,"updated":"2017-02-28T08:54:58.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizpb8ph80000wsu2fp3x3d4y","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">module.exports = function(config) &#123;</div><div class=\"line\">    var files = [];</div><div class=\"line\">    files.push(&apos;newifi/@(jquery*|newifi).js&apos;);</div><div class=\"line\">    files.push(&apos;index.html&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.coffee&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.js&apos;);</div><div class=\"line\">    var otherFiles = [</div><div class=\"line\">        &apos;newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).js&apos;,</div><div class=\"line\">        &apos;newifi/**/*.css&apos;,</div><div class=\"line\">        &apos;newifi/**/*.json&apos;</div><div class=\"line\">    ];</div><div class=\"line\">    otherFiles.forEach((file) =&gt; &#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    var preprocessors = &#123;</div><div class=\"line\">        &apos;**/*.html&apos;: [&apos;html2js&apos;],</div><div class=\"line\">        &apos;../../**/*.coffee&apos;: [&apos;coffee&apos;]</div><div class=\"line\">    &#125;;</div><div class=\"line\">    preprocessors[otherFiles[0]] = [&apos;coverage&apos;];</div><div class=\"line\">    config.set(&#123;</div><div class=\"line\">        // base path that will be used to resolve all patterns (eg. files, exclude)</div><div class=\"line\">        basePath: &apos;web/htdocs/&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // frameworks to use</div><div class=\"line\">        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter</div><div class=\"line\">        frameworks: [&apos;jasmine-jquery&apos;, &apos;jasmine&apos;, &apos;jasmine-matchers&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // list of files / patterns to load in the browser</div><div class=\"line\">        files: files,</div><div class=\"line\"></div><div class=\"line\">        // list of files to exclude</div><div class=\"line\">        exclude: [],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // preprocess matching files before serving them to the browser</div><div class=\"line\">        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</div><div class=\"line\">        preprocessors: preprocessors,</div><div class=\"line\">        proxies: &#123;</div><div class=\"line\">            &apos;/newifi&apos;: &apos;/base/newifi&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // test results reporter to use</div><div class=\"line\">        // possible values: &apos;dots&apos;, &apos;progress&apos;</div><div class=\"line\">        // available reporters: https://npmjs.org/browse/keyword/karma-reporter</div><div class=\"line\">        reporters: [&apos;progress&apos;, &apos;kjhtml&apos;, &apos;coverage&apos;],</div><div class=\"line\"></div><div class=\"line\">        coverageReporter: &#123;</div><div class=\"line\">            type: &apos;html&apos;,</div><div class=\"line\">            dir: &apos;../../coverage/&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // web server port</div><div class=\"line\">        port: 9876,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable colors in the output (reporters and logs)</div><div class=\"line\">        colors: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // level of logging</div><div class=\"line\">        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</div><div class=\"line\">        logLevel: config.LOG_INFO,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable watching file and executing tests whenever any file changes</div><div class=\"line\">        autoWatch: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // start these browsers</div><div class=\"line\">        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</div><div class=\"line\">        browsers: [&apos;PhantomJS&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // Continuous Integration mode</div><div class=\"line\">        // if true, Karma captures browsers, runs the tests and exits</div><div class=\"line\">        singleRun: false,</div><div class=\"line\"></div><div class=\"line\">        // Concurrency level</div><div class=\"line\">        // how many browser should be started simultaneous</div><div class=\"line\">        concurrency: Infinity</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>这是改进后的配置文件。<br>上一篇里面用<code>glob</code>获取所有匹配文件，然后一个个加文件的做法其实是多余的。<br>经过试验，其实<code>karma</code>的文件匹配方式是支持<code>glob</code>那套的。<br><a id=\"more\"></a></p>\n<p>然后，新配置内添加<code>kjhtml</code>插件和<code>coverage</code>插件。<br><code>kjhtml</code>插件的作用是将<code>karma</code>服务器的debug页变成测试结果页。而且，在debug页点击其中一个测试结果，该测试都会重新执行一遍。不过，可惜的是，修改测试文件后不会自动刷新。<br><code>coverage</code>插件是覆盖测试报告。<br>上面配置文件里面的这句:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preprocessors[otherFiles[0]] = [&apos;coverage&apos;];</div></pre></td></tr></table></figure></p>\n<p>表示那些被测试的文件需要代码覆盖测试报告。</p>\n","excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">module.exports = function(config) &#123;</div><div class=\"line\">    var files = [];</div><div class=\"line\">    files.push(&apos;newifi/@(jquery*|newifi).js&apos;);</div><div class=\"line\">    files.push(&apos;index.html&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.coffee&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.js&apos;);</div><div class=\"line\">    var otherFiles = [</div><div class=\"line\">        &apos;newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).js&apos;,</div><div class=\"line\">        &apos;newifi/**/*.css&apos;,</div><div class=\"line\">        &apos;newifi/**/*.json&apos;</div><div class=\"line\">    ];</div><div class=\"line\">    otherFiles.forEach((file) =&gt; &#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    var preprocessors = &#123;</div><div class=\"line\">        &apos;**/*.html&apos;: [&apos;html2js&apos;],</div><div class=\"line\">        &apos;../../**/*.coffee&apos;: [&apos;coffee&apos;]</div><div class=\"line\">    &#125;;</div><div class=\"line\">    preprocessors[otherFiles[0]] = [&apos;coverage&apos;];</div><div class=\"line\">    config.set(&#123;</div><div class=\"line\">        // base path that will be used to resolve all patterns (eg. files, exclude)</div><div class=\"line\">        basePath: &apos;web/htdocs/&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // frameworks to use</div><div class=\"line\">        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter</div><div class=\"line\">        frameworks: [&apos;jasmine-jquery&apos;, &apos;jasmine&apos;, &apos;jasmine-matchers&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // list of files / patterns to load in the browser</div><div class=\"line\">        files: files,</div><div class=\"line\"></div><div class=\"line\">        // list of files to exclude</div><div class=\"line\">        exclude: [],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // preprocess matching files before serving them to the browser</div><div class=\"line\">        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</div><div class=\"line\">        preprocessors: preprocessors,</div><div class=\"line\">        proxies: &#123;</div><div class=\"line\">            &apos;/newifi&apos;: &apos;/base/newifi&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // test results reporter to use</div><div class=\"line\">        // possible values: &apos;dots&apos;, &apos;progress&apos;</div><div class=\"line\">        // available reporters: https://npmjs.org/browse/keyword/karma-reporter</div><div class=\"line\">        reporters: [&apos;progress&apos;, &apos;kjhtml&apos;, &apos;coverage&apos;],</div><div class=\"line\"></div><div class=\"line\">        coverageReporter: &#123;</div><div class=\"line\">            type: &apos;html&apos;,</div><div class=\"line\">            dir: &apos;../../coverage/&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // web server port</div><div class=\"line\">        port: 9876,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable colors in the output (reporters and logs)</div><div class=\"line\">        colors: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // level of logging</div><div class=\"line\">        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</div><div class=\"line\">        logLevel: config.LOG_INFO,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable watching file and executing tests whenever any file changes</div><div class=\"line\">        autoWatch: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // start these browsers</div><div class=\"line\">        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</div><div class=\"line\">        browsers: [&apos;PhantomJS&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // Continuous Integration mode</div><div class=\"line\">        // if true, Karma captures browsers, runs the tests and exits</div><div class=\"line\">        singleRun: false,</div><div class=\"line\"></div><div class=\"line\">        // Concurrency level</div><div class=\"line\">        // how many browser should be started simultaneous</div><div class=\"line\">        concurrency: Infinity</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>这是改进后的配置文件。<br>上一篇里面用<code>glob</code>获取所有匹配文件，然后一个个加文件的做法其实是多余的。<br>经过试验，其实<code>karma</code>的文件匹配方式是支持<code>glob</code>那套的。<br>","more":"</p>\n<p>然后，新配置内添加<code>kjhtml</code>插件和<code>coverage</code>插件。<br><code>kjhtml</code>插件的作用是将<code>karma</code>服务器的debug页变成测试结果页。而且，在debug页点击其中一个测试结果，该测试都会重新执行一遍。不过，可惜的是，修改测试文件后不会自动刷新。<br><code>coverage</code>插件是覆盖测试报告。<br>上面配置文件里面的这句:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preprocessors[otherFiles[0]] = [&apos;coverage&apos;];</div></pre></td></tr></table></figure></p>\n<p>表示那些被测试的文件需要代码覆盖测试报告。</p>"},{"title":"karma配置参数笔记","date":"2017-02-16T16:04:10.000Z","description":"本文是关于karam配置参数笔记.涉及如下参数:basePath files proxies","_content":"\n```\nmodule.exports = function(config) {\n    var globSync = require(\"glob\").sync;\n    var files = globSync('newifi/@(jquery*|newifi).js', { cwd: 'web/htdocs' });\n    var otherJsFiles = globSync('newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).{js,json}', { cwd: 'web/htdocs' });\n    var cssFiles = globSync('newifi/**/*.css', { cwd: 'web/htdocs' });\n    files.push('index.html');\n    files.push('../../test/*.coffee');\n    files.push('../../test/*.js');\n    otherJsFiles.forEach(function(file){\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    cssFiles.forEach(function(file){\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    config.set({\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: 'web/htdocs/',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['jasmine-jquery', 'jasmine', 'jasmine-matchers'],\n\n\n        // list of files / patterns to load in the browser\n        files: files,\n\n        // list of files to exclude\n        exclude: [],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: {\n            '**/*.html': ['html2js'],\n            '../../**/*.coffee': ['coffee', 'coverage']\n        },\n        proxies: {\n            '/newifi': '/base/newifi'\n        },\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress'],\n\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: false,\n\n        // Concurrency level\n        // how many browser should be started simultaneous\n        concurrency: Infinity\n    });\n};\n```\n上面是我的配置文件  \n<!--more-->\n首先，说明下basePath参数。这个参数设置了`web/htdocs/`，这个作用是在`files`和`exclude`两个参数里面不用再写这部分路径的匹配了。  \n但是，我这个项目的`test`目录在`web/htdocs/`外,所以还要补上`../../`。否则会匹配不上。\n\n然后，我们再看看`files`参数下面这三个参数`pattern`、`served`和`included`这三个参数.  \n`pattern`是要匹配的文件和匹配模式  \n`served`用于该文件是否由karma webserver提供  \n`included`浏览器是否需要通过`<script>`标签引入该文件  \n\n为什么我要将部分文件设置成`included:false`手动加载呢？  \n这是因为部分js文件加载是由`newifi.js`，通过ajax加载进去的。如果，直接`included`进karma webserver就会报错（找不到函数或者变量没定义）。  \n但是，这样还是不能正常加载这些js文件的。在执行`newifi.js`时，ajax加载这部分js文件会提示404.\n这是因为karma将加载后的文件移到`http:\\\\localhost:[port]\\base`下了。所以，你还要设置`proxies`参数.将ajax加载`/newifi`下的js文件指向`/base/newifi`\n","source":"_posts/karma-config-note.md","raw":"---\ntitle: karma配置参数笔记\ndate: 2017-02-16 16:04:10\ncategories:\n- 测试\ntags:\n- karma\n- 测试框架\ndescription: 本文是关于karam配置参数笔记.涉及如下参数:basePath files proxies\n---\n\n```\nmodule.exports = function(config) {\n    var globSync = require(\"glob\").sync;\n    var files = globSync('newifi/@(jquery*|newifi).js', { cwd: 'web/htdocs' });\n    var otherJsFiles = globSync('newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).{js,json}', { cwd: 'web/htdocs' });\n    var cssFiles = globSync('newifi/**/*.css', { cwd: 'web/htdocs' });\n    files.push('index.html');\n    files.push('../../test/*.coffee');\n    files.push('../../test/*.js');\n    otherJsFiles.forEach(function(file){\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    cssFiles.forEach(function(file){\n        files.push({\n            pattern: file,\n            served: true,\n            included: false\n        });\n    });\n    config.set({\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: 'web/htdocs/',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['jasmine-jquery', 'jasmine', 'jasmine-matchers'],\n\n\n        // list of files / patterns to load in the browser\n        files: files,\n\n        // list of files to exclude\n        exclude: [],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: {\n            '**/*.html': ['html2js'],\n            '../../**/*.coffee': ['coffee', 'coverage']\n        },\n        proxies: {\n            '/newifi': '/base/newifi'\n        },\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress'],\n\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: false,\n\n        // Concurrency level\n        // how many browser should be started simultaneous\n        concurrency: Infinity\n    });\n};\n```\n上面是我的配置文件  \n<!--more-->\n首先，说明下basePath参数。这个参数设置了`web/htdocs/`，这个作用是在`files`和`exclude`两个参数里面不用再写这部分路径的匹配了。  \n但是，我这个项目的`test`目录在`web/htdocs/`外,所以还要补上`../../`。否则会匹配不上。\n\n然后，我们再看看`files`参数下面这三个参数`pattern`、`served`和`included`这三个参数.  \n`pattern`是要匹配的文件和匹配模式  \n`served`用于该文件是否由karma webserver提供  \n`included`浏览器是否需要通过`<script>`标签引入该文件  \n\n为什么我要将部分文件设置成`included:false`手动加载呢？  \n这是因为部分js文件加载是由`newifi.js`，通过ajax加载进去的。如果，直接`included`进karma webserver就会报错（找不到函数或者变量没定义）。  \n但是，这样还是不能正常加载这些js文件的。在执行`newifi.js`时，ajax加载这部分js文件会提示404.\n这是因为karma将加载后的文件移到`http:\\\\localhost:[port]\\base`下了。所以，你还要设置`proxies`参数.将ajax加载`/newifi`下的js文件指向`/base/newifi`\n","slug":"karma-config-note","published":1,"updated":"2017-02-28T08:54:58.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizpb8phe0002wsu2myv9g5lc","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">module.exports = function(config) &#123;</div><div class=\"line\">    var globSync = require(&quot;glob&quot;).sync;</div><div class=\"line\">    var files = globSync(&apos;newifi/@(jquery*|newifi).js&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    var otherJsFiles = globSync(&apos;newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).&#123;js,json&#125;&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    var cssFiles = globSync(&apos;newifi/**/*.css&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    files.push(&apos;index.html&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.coffee&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.js&apos;);</div><div class=\"line\">    otherJsFiles.forEach(function(file)&#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    cssFiles.forEach(function(file)&#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    config.set(&#123;</div><div class=\"line\">        // base path that will be used to resolve all patterns (eg. files, exclude)</div><div class=\"line\">        basePath: &apos;web/htdocs/&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // frameworks to use</div><div class=\"line\">        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter</div><div class=\"line\">        frameworks: [&apos;jasmine-jquery&apos;, &apos;jasmine&apos;, &apos;jasmine-matchers&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // list of files / patterns to load in the browser</div><div class=\"line\">        files: files,</div><div class=\"line\"></div><div class=\"line\">        // list of files to exclude</div><div class=\"line\">        exclude: [],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // preprocess matching files before serving them to the browser</div><div class=\"line\">        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</div><div class=\"line\">        preprocessors: &#123;</div><div class=\"line\">            &apos;**/*.html&apos;: [&apos;html2js&apos;],</div><div class=\"line\">            &apos;../../**/*.coffee&apos;: [&apos;coffee&apos;, &apos;coverage&apos;]</div><div class=\"line\">        &#125;,</div><div class=\"line\">        proxies: &#123;</div><div class=\"line\">            &apos;/newifi&apos;: &apos;/base/newifi&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // test results reporter to use</div><div class=\"line\">        // possible values: &apos;dots&apos;, &apos;progress&apos;</div><div class=\"line\">        // available reporters: https://npmjs.org/browse/keyword/karma-reporter</div><div class=\"line\">        reporters: [&apos;progress&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // web server port</div><div class=\"line\">        port: 9876,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable colors in the output (reporters and logs)</div><div class=\"line\">        colors: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // level of logging</div><div class=\"line\">        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</div><div class=\"line\">        logLevel: config.LOG_INFO,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable watching file and executing tests whenever any file changes</div><div class=\"line\">        autoWatch: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // start these browsers</div><div class=\"line\">        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</div><div class=\"line\">        browsers: [&apos;PhantomJS&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // Continuous Integration mode</div><div class=\"line\">        // if true, Karma captures browsers, runs the tests and exits</div><div class=\"line\">        singleRun: false,</div><div class=\"line\"></div><div class=\"line\">        // Concurrency level</div><div class=\"line\">        // how many browser should be started simultaneous</div><div class=\"line\">        concurrency: Infinity</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>上面是我的配置文件<br><a id=\"more\"></a><br>首先，说明下basePath参数。这个参数设置了<code>web/htdocs/</code>，这个作用是在<code>files</code>和<code>exclude</code>两个参数里面不用再写这部分路径的匹配了。<br>但是，我这个项目的<code>test</code>目录在<code>web/htdocs/</code>外,所以还要补上<code>../../</code>。否则会匹配不上。</p>\n<p>然后，我们再看看<code>files</code>参数下面这三个参数<code>pattern</code>、<code>served</code>和<code>included</code>这三个参数.<br><code>pattern</code>是要匹配的文件和匹配模式<br><code>served</code>用于该文件是否由karma webserver提供<br><code>included</code>浏览器是否需要通过<code>&lt;script&gt;</code>标签引入该文件  </p>\n<p>为什么我要将部分文件设置成<code>included:false</code>手动加载呢？<br>这是因为部分js文件加载是由<code>newifi.js</code>，通过ajax加载进去的。如果，直接<code>included</code>进karma webserver就会报错（找不到函数或者变量没定义）。<br>但是，这样还是不能正常加载这些js文件的。在执行<code>newifi.js</code>时，ajax加载这部分js文件会提示404.<br>这是因为karma将加载后的文件移到<code>http:\\\\localhost:[port]\\base</code>下了。所以，你还要设置<code>proxies</code>参数.将ajax加载<code>/newifi</code>下的js文件指向<code>/base/newifi</code></p>\n","excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">module.exports = function(config) &#123;</div><div class=\"line\">    var globSync = require(&quot;glob&quot;).sync;</div><div class=\"line\">    var files = globSync(&apos;newifi/@(jquery*|newifi).js&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    var otherJsFiles = globSync(&apos;newifi/**/!(jquery*|newifi|angular*|bootstrap|echarts*).&#123;js,json&#125;&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    var cssFiles = globSync(&apos;newifi/**/*.css&apos;, &#123; cwd: &apos;web/htdocs&apos; &#125;);</div><div class=\"line\">    files.push(&apos;index.html&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.coffee&apos;);</div><div class=\"line\">    files.push(&apos;../../test/*.js&apos;);</div><div class=\"line\">    otherJsFiles.forEach(function(file)&#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    cssFiles.forEach(function(file)&#123;</div><div class=\"line\">        files.push(&#123;</div><div class=\"line\">            pattern: file,</div><div class=\"line\">            served: true,</div><div class=\"line\">            included: false</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    config.set(&#123;</div><div class=\"line\">        // base path that will be used to resolve all patterns (eg. files, exclude)</div><div class=\"line\">        basePath: &apos;web/htdocs/&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // frameworks to use</div><div class=\"line\">        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter</div><div class=\"line\">        frameworks: [&apos;jasmine-jquery&apos;, &apos;jasmine&apos;, &apos;jasmine-matchers&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // list of files / patterns to load in the browser</div><div class=\"line\">        files: files,</div><div class=\"line\"></div><div class=\"line\">        // list of files to exclude</div><div class=\"line\">        exclude: [],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // preprocess matching files before serving them to the browser</div><div class=\"line\">        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</div><div class=\"line\">        preprocessors: &#123;</div><div class=\"line\">            &apos;**/*.html&apos;: [&apos;html2js&apos;],</div><div class=\"line\">            &apos;../../**/*.coffee&apos;: [&apos;coffee&apos;, &apos;coverage&apos;]</div><div class=\"line\">        &#125;,</div><div class=\"line\">        proxies: &#123;</div><div class=\"line\">            &apos;/newifi&apos;: &apos;/base/newifi&apos;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">        // test results reporter to use</div><div class=\"line\">        // possible values: &apos;dots&apos;, &apos;progress&apos;</div><div class=\"line\">        // available reporters: https://npmjs.org/browse/keyword/karma-reporter</div><div class=\"line\">        reporters: [&apos;progress&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // web server port</div><div class=\"line\">        port: 9876,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable colors in the output (reporters and logs)</div><div class=\"line\">        colors: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // level of logging</div><div class=\"line\">        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</div><div class=\"line\">        logLevel: config.LOG_INFO,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // enable / disable watching file and executing tests whenever any file changes</div><div class=\"line\">        autoWatch: true,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // start these browsers</div><div class=\"line\">        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</div><div class=\"line\">        browsers: [&apos;PhantomJS&apos;],</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        // Continuous Integration mode</div><div class=\"line\">        // if true, Karma captures browsers, runs the tests and exits</div><div class=\"line\">        singleRun: false,</div><div class=\"line\"></div><div class=\"line\">        // Concurrency level</div><div class=\"line\">        // how many browser should be started simultaneous</div><div class=\"line\">        concurrency: Infinity</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>上面是我的配置文件<br>","more":"<br>首先，说明下basePath参数。这个参数设置了<code>web/htdocs/</code>，这个作用是在<code>files</code>和<code>exclude</code>两个参数里面不用再写这部分路径的匹配了。<br>但是，我这个项目的<code>test</code>目录在<code>web/htdocs/</code>外,所以还要补上<code>../../</code>。否则会匹配不上。</p>\n<p>然后，我们再看看<code>files</code>参数下面这三个参数<code>pattern</code>、<code>served</code>和<code>included</code>这三个参数.<br><code>pattern</code>是要匹配的文件和匹配模式<br><code>served</code>用于该文件是否由karma webserver提供<br><code>included</code>浏览器是否需要通过<code>&lt;script&gt;</code>标签引入该文件  </p>\n<p>为什么我要将部分文件设置成<code>included:false</code>手动加载呢？<br>这是因为部分js文件加载是由<code>newifi.js</code>，通过ajax加载进去的。如果，直接<code>included</code>进karma webserver就会报错（找不到函数或者变量没定义）。<br>但是，这样还是不能正常加载这些js文件的。在执行<code>newifi.js</code>时，ajax加载这部分js文件会提示404.<br>这是因为karma将加载后的文件移到<code>http:\\\\localhost:[port]\\base</code>下了。所以，你还要设置<code>proxies</code>参数.将ajax加载<code>/newifi</code>下的js文件指向<code>/base/newifi</code></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cizpb8ph80000wsu2fp3x3d4y","category_id":"cizpb8phg0003wsu2g8w1ef4n","_id":"cizpb8pho0007wsu2ora8gtk6"},{"post_id":"cizpb8phe0002wsu2myv9g5lc","category_id":"cizpb8phg0003wsu2g8w1ef4n","_id":"cizpb8phq000awsu2ux2n2syb"}],"PostTag":[{"post_id":"cizpb8ph80000wsu2fp3x3d4y","tag_id":"cizpb8phj0004wsu2lpv7w62t","_id":"cizpb8php0009wsu2ij68l0z5"},{"post_id":"cizpb8ph80000wsu2fp3x3d4y","tag_id":"cizpb8phl0006wsu2zfsqusbl","_id":"cizpb8phq000bwsu2tm2id6uh"},{"post_id":"cizpb8phe0002wsu2myv9g5lc","tag_id":"cizpb8phj0004wsu2lpv7w62t","_id":"cizpb8phs000dwsu2xtmu5vdx"},{"post_id":"cizpb8phe0002wsu2myv9g5lc","tag_id":"cizpb8phl0006wsu2zfsqusbl","_id":"cizpb8phs000ewsu2q1sf67t1"}],"Tag":[{"name":"karma","_id":"cizpb8phj0004wsu2lpv7w62t"},{"name":"测试框架","_id":"cizpb8phl0006wsu2zfsqusbl"}]}}